kind: ConfigMap
apiVersion: v1
metadata:
  name: haproxy-config
  #namespace: default
data:
  haproxy.cfg: |-
    global
        #log /dev/log    local0
        #log /dev/log    local1 notice
        #chroot /var/lib/haproxy
        stats socket /run/haproxy-admin.sock mode 660 level admin
        stats timeout 30s
        user proxy
        group proxy
        daemon

        # Default SSL material locations
        ca-base /etc/ssl/certs
        crt-base /etc/ssl/private

        # Default ciphers to use on SSL-enabled listening sockets.
        # For more information, see ciphers(1SSL).
        ssl-default-bind-ciphers kEECDH+aRSA+AES:kRSA+AES:+AES256:RC4-SHA:!kEDH:!LOW:!EXP:!MD5:!aNULL:!eNULL

    defaults
        #log     global
        mode    http
        #option  httplog
        #option  dontlognull
        timeout connect 5000
        timeout client  50000
        timeout server  50000
        errorfile 400 /usr/local/etc/haproxy/errors/400.http
        errorfile 403 /usr/local/etc/haproxy/errors/403.http
        errorfile 408 /usr/local/etc/haproxy/errors/408.http
        errorfile 500 /usr/local/etc/haproxy/errors/500.http
        errorfile 502 /usr/local/etc/haproxy/errors/502.http
        errorfile 503 /usr/local/etc/haproxy/errors/503.http
        errorfile 504 /usr/local/etc/haproxy/errors/504.http

    frontend front
        bind *:80
        mode http
        default_backend nodes

    backend nodes
        mode http
        balance roundrobin
        option forwardfor
        http-request set-header X-Forwarded-Port %[dst_port]
        http-request add-header X-Forwarded-Proto https if { ssl_fc }
        option httpchk HEAD / HTTP/1.1\r\nHost:localhost
        server node0 10.0.4.2:30000 check
        server node1 10.0.4.3:30000 check
        server node2 10.0.4.4:30000 check
        server node3 10.0.4.5:30000 check

---
# deploys a HAProxy LB that runs on node0 in the host network and proxies TCP connections to NodePorts on all nodes
kind: Deployment 
apiVersion: extensions/v1beta1
metadata:
  name: nodeport-lb
  #namespace: default
  labels:
    foo: bar
spec:
  # Can only have a single active instance.
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      name: nodeport-lb
      labels:
        foo: bar
    spec:
      # run this pod on node0 in the host network
      hostNetwork: true
      nodeSelector:
        kubernetes.io/hostname: node0
      containers:
        - name: nodeport-lb
          image: haproxy:1.7.1
          args:
            - "-f"
            - "/usr/local/etc/haproxy-cfg/haproxy.cfg"
          volumeMounts:
            - name: config-volume
              mountPath: /usr/local/etc/haproxy-cfg
              readOnly: true
      volumes:
        - name: config-volume
          configMap:
            name: haproxy-config

# TODO: get node IPs from k8s API and generate "backend nodes" config section from it
# TODO: the config file is ephemeral just like all other files in the container, so having it in a volume (even a temporary one) shouldn't be necessary and sucks.